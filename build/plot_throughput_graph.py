#!/usr/bin/env python3
import seaborn as sns
import matplotlib.pyplot as plt
import os ,sys

# Dictionary to hold throughput values 
throughput_vals = {}

# Read results.txt generated by dedup_script.sh
def read_src(resultS_file_path):
    global throughput_vals
    with open(resultS_file_path, 'r') as results_file:
        curr_algo = None
        curr_throughput = None
        for line in results_file:
            if(".conf" in line):
                curr_algo = line.strip().split(".")[0].strip().split("_")[0].strip()
            elif("Chunking Throughput" in line):
                curr_throughput = float(line.strip().split(":")[1].strip())
                throughput_vals[curr_algo] = curr_throughput
                if(curr_algo == None):
                    raise Exception("Throughput value detected but no chunking technique? Check results file format for errors.")
                curr_throughput = None
                curr_algo = None

# Plot bar graph
def plot_results():
    global throughput_vals
    sns.barplot(x = throughput_vals.keys(), y = throughput_vals.values())
    plt.tick_params(axis='x', labelsize=8)
    plt.xlabel("CDC Algorithm")
    plt.ylabel("Throughput (GB/s)")
    plt.suptitle("Throughput of CDC Algorithms on given dataset")
    plt.savefig('results_graph.png')

    

    
if(__name__ == "__main__"):
    if(len(sys.argv) != 2):
        print("Usage: python3 plot_throughput_graph.py <path_to_results>")
        print("\t <path_to_results>: Path to results.txt file generated by dedup_script.sh")
        sys.exit(0)
    
    results_path = sys.argv[1]
    read_src(results_path)
    plot_results()

    print("Throughput graph plotted and saved as results_graph.png.")

